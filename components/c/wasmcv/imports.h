// Generated by `wit-bindgen` 0.32.0. DO NOT EDIT!
#ifndef __BINDINGS_IMPORTS_H
#define __BINDINGS_IMPORTS_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

typedef struct imports_string_t {
  uint8_t*ptr;
  size_t len;
} imports_string_t;

typedef struct wasm_cv_types_size_t {
  int32_t   x;
  int32_t   y;
} wasm_cv_types_size_t;

typedef struct wasm_cv_types_scalar_t {
  float   val1;
  float   val2;
  float   val3;
  float   val4;
} wasm_cv_types_scalar_t;

typedef struct wasm_cv_types_rect_t {
  wasm_cv_types_size_t   min;
  wasm_cv_types_size_t   max;
} wasm_cv_types_rect_t;

typedef struct wasm_cv_types_rgba_t {
  uint8_t   r;
  uint8_t   g;
  uint8_t   b;
  uint8_t   a;
} wasm_cv_types_rgba_t;

typedef uint8_t wasm_cv_types_border_type_t;

#define WASM_CV_TYPES_BORDER_TYPE_BORDER_CONSTANT 0
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REPLICATE 1
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REFLECT 2
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_WRAP 3
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_REFLECT101 4
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_TRANSPARENT 5
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_DEFAULT 6
#define WASM_CV_TYPES_BORDER_TYPE_BORDER_ISOLATED 7

typedef uint8_t wasm_cv_types_adaptive_threshold_type_t;

#define WASM_CV_TYPES_ADAPTIVE_THRESHOLD_TYPE_ADAPTIVE_THRESHOLD_MEAN 0
#define WASM_CV_TYPES_ADAPTIVE_THRESHOLD_TYPE_ADAPTIVE_THRESHOLD_GAUSSIAN 1

typedef uint8_t wasm_cv_types_threshold_type_t;

#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_BINARY 0
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_BINARY_INV 1
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TRUNC 2
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TO_ZERO 3
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_TO_ZERO_INV 4
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_MASK 5
#define WASM_CV_TYPES_THRESHOLD_TYPE_THRESHOLD_OTSU 6
#define WASM_CV_TYPES_THRESHOLD_TYPE_TTHRESHOLD_TRIANGLE 7

typedef uint8_t wasm_cv_types_data_layout_type_t;

#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_UNKNOWN 0
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_ND 1
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NCHW 2
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NCDHW 3
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NHWC 4
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_NDHWC 5
#define WASM_CV_TYPES_DATA_LAYOUT_TYPE_DATA_LAYOUT_PLANAR 6

typedef uint8_t wasm_cv_types_padding_mode_type_t;

#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_NULL 0
#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_CROP_CENTER 1
#define WASM_CV_TYPES_PADDING_MODE_TYPE_PADDING_MODE_LETTERBOX 2

typedef struct wasm_cv_types_blob_params_t {
  float   scale_factor;
  wasm_cv_types_size_t   size;
  wasm_cv_types_scalar_t   mean;
  bool   swap_rb;
  uint8_t   ddepth;
  wasm_cv_types_data_layout_type_t   data_layout;
  wasm_cv_types_padding_mode_type_t   padding_mode;
  wasm_cv_types_scalar_t   border;
} wasm_cv_types_blob_params_t;

typedef struct wasm_cv_types_mix_max_loc_result_t {
  float   min_val;
  float   max_val;
  wasm_cv_types_size_t   min_loc;
  wasm_cv_types_size_t   max_loc;
} wasm_cv_types_mix_max_loc_result_t;

typedef uint8_t wasm_cv_types_hershey_font_type_t;

#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SIMPLEX 0
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_PLAIN 1
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_DUPLEX 2
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_COMPLEX 3
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_TRIPLEX 4
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_COMPLEX_SMALL 5
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SCRIPT_SIMPLEX 6
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_SCRIPT_COMPLEX 7
#define WASM_CV_TYPES_HERSHEY_FONT_TYPE_HERSHEY_FONT_ITALIC 8

typedef wasm_cv_types_mix_max_loc_result_t wasm_cv_mat_mix_max_loc_result_t;

typedef wasm_cv_types_rect_t wasm_cv_mat_rect_t;

typedef uint8_t wasm_cv_mat_mattype_t;

#define WASM_CV_MAT_MATTYPE_CV8U 0
#define WASM_CV_MAT_MATTYPE_CV8S 1
#define WASM_CV_MAT_MATTYPE_CV16U 2
#define WASM_CV_MAT_MATTYPE_CV16S 3
#define WASM_CV_MAT_MATTYPE_CV32S 4
#define WASM_CV_MAT_MATTYPE_CV32F 5
#define WASM_CV_MAT_MATTYPE_CV64F 6

typedef struct wasm_cv_mat_own_mat_t {
  int32_t __handle;
} wasm_cv_mat_own_mat_t;

typedef struct wasm_cv_mat_borrow_mat_t {
  int32_t __handle;
} wasm_cv_mat_borrow_mat_t;

typedef struct {
  uint32_t *ptr;
  size_t len;
} imports_list_u32_t;

typedef wasm_cv_types_border_type_t wasm_cv_cv_border_type_t;

typedef wasm_cv_types_size_t wasm_cv_cv_size_t;

typedef wasm_cv_types_adaptive_threshold_type_t wasm_cv_cv_adaptive_threshold_type_t;

typedef wasm_cv_types_threshold_type_t wasm_cv_cv_threshold_type_t;

typedef wasm_cv_types_scalar_t wasm_cv_cv_scalar_t;

typedef wasm_cv_types_rect_t wasm_cv_cv_rect_t;

typedef wasm_cv_types_rgba_t wasm_cv_cv_rgba_t;

typedef wasm_cv_types_blob_params_t wasm_cv_cv_blob_params_t;

typedef wasm_cv_types_hershey_font_type_t wasm_cv_cv_hershey_font_type_t;

typedef wasm_cv_mat_mattype_t wasm_cv_cv_mattype_t;

typedef wasm_cv_mat_own_mat_t wasm_cv_cv_own_mat_t;

typedef struct {
  int32_t *ptr;
  size_t len;
} imports_list_s32_t;

typedef struct {
  wasm_cv_cv_rect_t *ptr;
  size_t len;
} wasm_cv_cv_list_rect_t;

typedef struct {
  float *ptr;
  size_t len;
} imports_list_f32_t;

typedef uint8_t wasm_cv_net_net_backend_type_t;

#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_DEFAULT 0
#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_HALIDE 1
#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_OPENVINO 2
#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_OPENCV 3
#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_VKCOM 4
#define WASM_CV_NET_NET_BACKEND_TYPE_NET_BACKEND_CUDA 5

typedef uint8_t wasm_cv_net_net_target_type_t;

#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_CPU 0
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_FP32 1
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_FP16 2
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_VPU 3
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_VULKAN 4
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_FPGA 5
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_CUDA 6
#define WASM_CV_NET_NET_TARGET_TYPE_NET_TARGET_CUDA_FP16 7

typedef uint8_t wasm_cv_net_data_layout_type_t;

#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_UNKNOWN 0
#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_ND 1
#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_NCHW 2
#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_NHWC 3
#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_NDHWC 4
#define WASM_CV_NET_DATA_LAYOUT_TYPE_DATA_LAYOUT_PLANAR 5

typedef uint8_t wasm_cv_net_padding_mode_type_t;

#define WASM_CV_NET_PADDING_MODE_TYPE_PADDING_MODE_NULL 0
#define WASM_CV_NET_PADDING_MODE_TYPE_PADDING_MODE_CROP_CENTER 1
#define WASM_CV_NET_PADDING_MODE_TYPE_PADDING_MODE_LETTERBOX 2

typedef struct wasm_cv_net_own_layer_t {
  int32_t __handle;
} wasm_cv_net_own_layer_t;

typedef struct wasm_cv_net_borrow_layer_t {
  int32_t __handle;
} wasm_cv_net_borrow_layer_t;

typedef struct wasm_cv_net_own_net_t {
  int32_t __handle;
} wasm_cv_net_own_net_t;

typedef struct wasm_cv_net_borrow_net_t {
  int32_t __handle;
} wasm_cv_net_borrow_net_t;

typedef wasm_cv_mat_own_mat_t wasm_cv_net_own_mat_t;

typedef struct {
  imports_string_t *ptr;
  size_t len;
} imports_list_string_t;

typedef wasm_cv_mat_own_mat_t exports_wasm_cv_request_own_mat_t;

// Imported Functions from `wasm:cv/mat`
// Create a new Mat.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_static_mat_new_mat(void);
// Create a new Mat with the specified size and type.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_static_mat_new_mat_with_size(uint32_t cols, uint32_t rows, wasm_cv_mat_mattype_t mattype);
// Clone returns a cloned full copy of the Mat.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_clone(wasm_cv_mat_borrow_mat_t self);
// Close the Mat
extern void wasm_cv_mat_method_mat_close(wasm_cv_mat_borrow_mat_t self);
// Cols returns the number of columns for this Mat.
extern uint32_t wasm_cv_mat_method_mat_cols(wasm_cv_mat_borrow_mat_t self);
// Rows returns the number of rows for this Mat.
extern uint32_t wasm_cv_mat_method_mat_rows(wasm_cv_mat_borrow_mat_t self);
// Region returns a new Mat that points to a region of this Mat. Changes made to the
// region Mat will affect the original Mat, since they are pointers to the underlying
// OpenCV Mat object.
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_region(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_rect_t *rect);
// CopyTo copies Mat into destination Mat.
extern void wasm_cv_mat_method_mat_copy_to(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_own_mat_t dst);
// MatType returns the type of the Mat.
extern wasm_cv_mat_mattype_t wasm_cv_mat_method_mat_mattype(wasm_cv_mat_borrow_mat_t self);
// Size returns an array with one element for each dimension containing the size of that dimension for the Mat.
extern void wasm_cv_mat_method_mat_size(wasm_cv_mat_borrow_mat_t self, imports_list_u32_t *ret);
// Empty returns true if the Mat is empty.
extern bool wasm_cv_mat_method_mat_empty(wasm_cv_mat_borrow_mat_t self);
// GetFloatAt returns the value at the specified row and column as a f32.
extern float wasm_cv_mat_method_mat_get_float_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col);
// SetFloatAt sets the value at the specified row and column as a f32.
extern void wasm_cv_mat_method_mat_set_float_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, float val);
// GetUCharAt returns the value at the specified row and column as a u8.
extern uint8_t wasm_cv_mat_method_mat_get_uchar_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col);
// SetUCharAt sets the value at the specified row and column as a u8.
extern void wasm_cv_mat_method_mat_set_uchar_at(wasm_cv_mat_borrow_mat_t self, uint32_t row, uint32_t col, uint8_t val);
// Reshape changes the shape and/or the number of channels of a 2D matrix without copying the data.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#a4eb96e3251417fa88b78e2abd6cfd7d8
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_reshape(wasm_cv_mat_borrow_mat_t self, uint32_t channels, uint32_t rows);
// RowRange creates a matrix header for the specified row span.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#aa6542193430356ad631a9beabc624107
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_row_range(wasm_cv_mat_borrow_mat_t self, uint32_t start, uint32_t end);
// ColRange creates a matrix header for the specified column span.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d3/d63/classcv_1_1Mat.html#aadc8f9210fe4dec50513746c246fa8d9
extern wasm_cv_mat_own_mat_t wasm_cv_mat_method_mat_col_range(wasm_cv_mat_borrow_mat_t self, uint32_t start, uint32_t end);
// MinMaxLoc finds the global minimum and maximum in an array.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/d2/de8/group__core__array.html#gab473bf2eb6d14ff97e89b355dac20707
extern void wasm_cv_mat_method_mat_min_max_loc(wasm_cv_mat_borrow_mat_t self, wasm_cv_mat_mix_max_loc_result_t *ret);

// Imported Functions from `wasm:cv/cv`
// drawing functions
// Rectangle draws a simple, thick, or filled up-right rectangle.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d6e/group__imgproc__draw.html#ga07d2f74cadcf8e305e810ce8f3d1e1b7
extern void wasm_cv_cv_rectangle(wasm_cv_cv_own_mat_t img, wasm_cv_cv_rect_t *r, wasm_cv_cv_rgba_t *c, uint8_t thickness);
// PutText draws a text string.
// It renders the specified text string into the img Mat at the location
// passed in the "org" param, using the desired font face, font scale,
// color, and line thinkness.
// 
// For further details, please see:
// http://docs.opencv.org/master/d6/d6e/group__imgproc__draw.html#ga5126f47f883d730f633d74f07456c576
extern void wasm_cv_cv_put_text(wasm_cv_cv_own_mat_t img, imports_string_t *text, wasm_cv_cv_size_t *org, wasm_cv_cv_hershey_font_type_t font_face, double font_scale, wasm_cv_cv_rgba_t *c, int32_t thickness);
// imgproc functions
// AdaptiveThreshold applies a fixed-level threshold to each array element.
// 
// For further details, please see:
// https://docs.opencv.org/master/d7/d1b/group__imgproc__misc.html#ga72b913f352e4a1b1b397736707afcde3
extern wasm_cv_cv_own_mat_t wasm_cv_cv_adaptive_threshold(wasm_cv_cv_own_mat_t src, float max_value, wasm_cv_cv_adaptive_threshold_type_t adaptive_type, wasm_cv_cv_threshold_type_t threshold_type, uint32_t block_size, float c);
// Blur blurs an image Mat using a normalized box filter.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#ga8c45db9afe636703801b0b2e440fce37
extern wasm_cv_cv_own_mat_t wasm_cv_cv_blur(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *k_size);
// BoxFilter blurs an image using the box filter.
// 
// For further details, please see:
// https://docs.opencv.org/master/d4/d86/group__imgproc__filter.html#gad533230ebf2d42509547d514f7d3fbc3
extern wasm_cv_cv_own_mat_t wasm_cv_cv_box_filter(wasm_cv_cv_own_mat_t src, uint32_t depth, wasm_cv_cv_size_t *k_size);
// GaussianBlur blurs an image using a Gaussian filter.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d4/d86/group__imgproc__filter.html#gae8bdcd9154ed5ca3cbc1766d960f45c1
extern wasm_cv_cv_own_mat_t wasm_cv_cv_gaussian_blur(wasm_cv_cv_own_mat_t src, wasm_cv_cv_size_t *size, float sigma_x, float sigma_y, wasm_cv_cv_border_type_t border);
// Threshold applies a fixed-level threshold to each array element.
// 
// For further details, please see:
// https://docs.opencv.org/3.3.0/d7/d1b/group__imgproc__misc.html#gae8a4a146d1ca78c626a53577199e9c57
extern wasm_cv_cv_own_mat_t wasm_cv_cv_threshold(wasm_cv_cv_own_mat_t src, float thresh, float max_value, wasm_cv_cv_threshold_type_t threshold_type);
// Transpose for n-dimensional matrices.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d2/de8/group__core__array.html#gab1b1274b4a563be34cdfa55b8919a4ec
extern wasm_cv_cv_own_mat_t wasm_cv_cv_transpose_nd(wasm_cv_cv_own_mat_t src, imports_list_s32_t *order);
// dnn functions
// BlobFromImage creates 4-dimensional blob from image. Optionally resizes and crops image from center,
// subtract mean values, scales values by scalefactor, swap Blue and Red channels.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7
extern wasm_cv_cv_own_mat_t wasm_cv_cv_blob_from_image(wasm_cv_cv_own_mat_t image, float scale_factor, wasm_cv_cv_size_t *size, wasm_cv_cv_scalar_t *mean, bool swap_rb, bool crop);
// BlobFromImageWithParams creates 4-dimensional blob from image. Optionally resizes and crops image from center,
// subtract mean values, scales values by scalefactor, swap Blue and Red channels.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7
extern wasm_cv_cv_own_mat_t wasm_cv_cv_blob_from_image_with_params(wasm_cv_cv_own_mat_t image, wasm_cv_cv_blob_params_t *params);
// BlobRectsToImageRects converts blob rects to image rects.
// 
// For further details, please see:
// https://docs.opencv.org/4.4.0/d6/d0f/group__dnn.html#ga9d118d70a1659af729d01b10233213ee
extern void wasm_cv_cv_blob_rects_to_image_rects(wasm_cv_cv_blob_params_t *params, wasm_cv_cv_list_rect_t *blob_rects, wasm_cv_cv_size_t *image_size, wasm_cv_cv_list_rect_t *ret);
// NMSBoxes performs non maximum suppression given boxes and corresponding scores.
// 
// For futher details, please see:
// https://docs.opencv.org/4.4.0/d6/d0f/group__dnn.html#ga9d118d70a1659af729d01b10233213ee
extern void wasm_cv_cv_nms_boxes(wasm_cv_cv_list_rect_t *bboxes, imports_list_f32_t *scores, float score_threshold, float nms_threshold, imports_list_s32_t *ret);

// Imported Functions from `wasm:cv/net`
extern wasm_cv_net_own_layer_t wasm_cv_net_constructor_layer(void);
// GetName returns the name of the layer.
extern void wasm_cv_net_method_layer_get_name(wasm_cv_net_borrow_layer_t self, imports_string_t *ret);
// ReadNet read deep learning network represented in one of the supported formats.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga138439da76f26266fdefec9723f6c5cd
extern wasm_cv_net_own_net_t wasm_cv_net_static_net_read_net(imports_string_t *model, imports_string_t *config);
// ReadNetFromONNX reads a network model stored in ONNX framework's format.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/d6/d0f/group__dnn.html#ga9198ecaac7c32ddf0aa7a1bcbd359567
extern wasm_cv_net_own_net_t wasm_cv_net_static_net_read_net_from_onnx(imports_string_t *model);
// Close the network
extern void wasm_cv_net_method_net_close(wasm_cv_net_borrow_net_t self);
// Empty returns true if there are no layers in the network.
// 
// For further details, please see:
// https://docs.opencv.org/master/db/d30/classcv_1_1dnn_1_1Net.html#a6a5778787d5b8770deab5eda6968e66c
extern bool wasm_cv_net_method_net_empty(wasm_cv_net_borrow_net_t self);
// SetInput sets the new input value for the network.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/db/d30/classcv_1_1dnn_1_1Net.html#a672a08ae76444d75d05d7bfea3e4a328
extern void wasm_cv_net_method_net_set_input(wasm_cv_net_borrow_net_t self, wasm_cv_net_own_mat_t input, imports_string_t *name);
// Forward runs forward pass to compute output of layer with name outputName.
// 
// For further details, please see:
// https://docs.opencv.org/trunk/db/d30/classcv_1_1dnn_1_1Net.html#a98ed94cb6ef7063d3697259566da310b
extern wasm_cv_net_own_mat_t wasm_cv_net_method_net_forward(wasm_cv_net_borrow_net_t self, imports_string_t *output_name);
// GetUnconnectedOutLayers returns indexes of layers with unconnected outputs.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#ae26f0c29b3733d15d0482098ef9053e3
extern void wasm_cv_net_method_net_get_unconnected_out_layers(wasm_cv_net_borrow_net_t self, imports_list_u32_t *ret);
// GetLayerNames returns names of layers in the network.
// 
// For further details, please see:
// hhttps://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#a38e67098ae4ae5906bf8d8ea72199c2e
extern void wasm_cv_net_method_net_get_layer_names(wasm_cv_net_borrow_net_t self, imports_list_string_t *ret);
// GetLayer returns layer with specified id.
// 
// For further details, please see:
// https://docs.opencv.org/4.x/db/d30/classcv_1_1dnn_1_1Net.html#ac944d7f2d3ead5ef9b1b2fa3885f3ff1
extern wasm_cv_net_own_layer_t wasm_cv_net_method_net_get_layer(wasm_cv_net_borrow_net_t self, uint32_t id);

// Exported Functions from `wasm:cv/request`
exports_wasm_cv_request_own_mat_t exports_wasm_cv_request_process(exports_wasm_cv_request_own_mat_t image);

// Helper Functions

extern void wasm_cv_mat_mat_drop_own(wasm_cv_mat_own_mat_t handle);

extern wasm_cv_mat_borrow_mat_t wasm_cv_mat_borrow_mat(wasm_cv_mat_own_mat_t handle);

void imports_list_u32_free(imports_list_u32_t *ptr);

void imports_list_s32_free(imports_list_s32_t *ptr);

void wasm_cv_cv_list_rect_free(wasm_cv_cv_list_rect_t *ptr);

void imports_list_f32_free(imports_list_f32_t *ptr);

extern void wasm_cv_net_layer_drop_own(wasm_cv_net_own_layer_t handle);

extern wasm_cv_net_borrow_layer_t wasm_cv_net_borrow_layer(wasm_cv_net_own_layer_t handle);

extern void wasm_cv_net_net_drop_own(wasm_cv_net_own_net_t handle);

extern wasm_cv_net_borrow_net_t wasm_cv_net_borrow_net(wasm_cv_net_own_net_t handle);

void imports_list_string_free(imports_list_string_t *ptr);

// Transfers ownership of `s` into the string `ret`
void imports_string_set(imports_string_t *ret, const char*s);

// Creates a copy of the input nul-terminate string `s` and
// stores it into the component model string `ret`.
void imports_string_dup(imports_string_t *ret, const char*s);

// Deallocates the string pointed to by `ret`, deallocating
// the memory behind the string.
void imports_string_free(imports_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
